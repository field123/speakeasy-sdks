/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SDKOptions, serverURLFromOptions } from "../lib/config";
import { HTTPClient } from "../lib/http";
import { ClientSDK } from "../lib/sdks";
import { Jobs } from "./jobs";
import { Offerings } from "./offerings";
import { Plans } from "./plans";
import { Products } from "./products";
import { Schedules } from "./schedules";
import { Subscribers } from "./subscribers";
import { SubscriptionsSDK } from "./subscriptionssdk";

export class Subscriptions extends ClientSDK {
    private readonly options$: SDKOptions;

    constructor(options: SDKOptions = {}) {
        super({
            client: options.httpClient || new HTTPClient(),
            baseURL: serverURLFromOptions(options),
        });

        this.options$ = options;
        void this.options$;
    }

    private _products?: Products;
    get products() {
        return (this._products ??= new Products(this.options$));
    }

    private _plans?: Plans;
    get plans() {
        return (this._plans ??= new Plans(this.options$));
    }

    private _offerings?: Offerings;
    get offerings() {
        return (this._offerings ??= new Offerings(this.options$));
    }

    private _subscriptionsSDK?: SubscriptionsSDK;
    get subscriptionsSDK() {
        return (this._subscriptionsSDK ??= new SubscriptionsSDK(this.options$));
    }

    private _jobs?: Jobs;
    get jobs() {
        return (this._jobs ??= new Jobs(this.options$));
    }

    private _schedules?: Schedules;
    get schedules() {
        return (this._schedules ??= new Schedules(this.options$));
    }

    private _subscribers?: Subscribers;
    get subscribers() {
        return (this._subscribers ??= new Subscribers(this.options$));
    }
}
